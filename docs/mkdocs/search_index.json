{
    "docs": [
        {
            "location": "/", 
            "text": "mdx_steroids\n\n\nA small collection of Python Markdown extensions, written by Adam Twardoch except when stated otherwise. \n\n\n\n\nmdx_steroids.absimgsrc\n \n\n\nmdx_steroids.keys\n by Issac Muse after the idea by Adam Twardoch\n\n\nmdx_steroids.kill_tags\n \n\n\nmdx_steroids.md_mako\n \n\n\nmdx_steroids.meta_yaml\n by Bernhard Fisseni\n\n\nmdx_steroids.replimgsrc\n \n\n\nmdx_steroids.wikilink\n adapted from original\n\n\n\n\nAdam Twardoch has last edited this on 2017-08-18.\n\n\nInstallation\n\n\npip install --user --upgrade  git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nCode\n\n\nThe code is available on \ngithub.com/twardoch/markdown-steroids/\n\n\nUsage in MkDocs\n\n\nIn your \nmkdocs.yaml\n include:\n\n\nmarkdown_extensions:\n- mdx_steroids.absimgsrc:\n    base_url       : 'https://github.com/repo/blob/master/images/'\n    # Base URL to which the relative paths will be appended\n- mdx_steroids.keys:\n    camel_case: true\n    strict: false\n    separator: ''\n- mdx_steroids.kill_tags:\n    kill_known: true\n    kill_empty:\n      - p\n    normalize: false\n- mdx_steroids.md_mako:\n    python_block  : 'my_md_mako.py'\n    meta:\n      author: 'John Doe'\n- mdx_steroids.meta_yaml\n- mdx_steroids.replimgsrc:\n    find           : 'https://github.com/repo/blob/master/images'\n    replace        : '../img/'\n- mdx_steroids.wikilink:\n    base_url       : '/'\n    end_url        : '/'\n    html_class     : 'wikilink'\n    space_sep      : '-'", 
            "title": "Home"
        }, 
        {
            "location": "/#installation", 
            "text": "pip install --user --upgrade  git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/#code", 
            "text": "The code is available on  github.com/twardoch/markdown-steroids/", 
            "title": "Code"
        }, 
        {
            "location": "/#usage-in-mkdocs", 
            "text": "In your  mkdocs.yaml  include:  markdown_extensions:\n- mdx_steroids.absimgsrc:\n    base_url       : 'https://github.com/repo/blob/master/images/'\n    # Base URL to which the relative paths will be appended\n- mdx_steroids.keys:\n    camel_case: true\n    strict: false\n    separator: ''\n- mdx_steroids.kill_tags:\n    kill_known: true\n    kill_empty:\n      - p\n    normalize: false\n- mdx_steroids.md_mako:\n    python_block  : 'my_md_mako.py'\n    meta:\n      author: 'John Doe'\n- mdx_steroids.meta_yaml\n- mdx_steroids.replimgsrc:\n    find           : 'https://github.com/repo/blob/master/images'\n    replace        : '../img/'\n- mdx_steroids.wikilink:\n    base_url       : '/'\n    end_url        : '/'\n    html_class     : 'wikilink'\n    space_sep      : '-'", 
            "title": "Usage in MkDocs"
        }, 
        {
            "location": "/absimgsrc/", 
            "text": "mdx_steroids.absimgsrc\n\n\nThe \nmdx_steroids.absimgsrc\n replaces relative image URLs with absolute ones. \n\n\nInstallation\n\n\npip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nDocs\n\n\n\n\ngithub.com/twardoch/markdown-steroids/\n\n\n\n\nOptions\n\n\n  mdx_steroids.absimgsrc:\n    base_url       : 'https://github.com/repo/blob/master/images/' \n    # Base URL to which the relative paths will be appended\n\n\n\nCopyright \n 2016 Adam Twardoch \nadam+github@twardoch.com\n\nLicense: \nBSD 3-clause", 
            "title": "absimgsrc"
        }, 
        {
            "location": "/absimgsrc/#installation", 
            "text": "pip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/absimgsrc/#docs", 
            "text": "github.com/twardoch/markdown-steroids/", 
            "title": "Docs"
        }, 
        {
            "location": "/absimgsrc/#options", 
            "text": "mdx_steroids.absimgsrc:\n    base_url       : 'https://github.com/repo/blob/master/images/' \n    # Base URL to which the relative paths will be appended  Copyright   2016 Adam Twardoch  adam+github@twardoch.com \nLicense:  BSD 3-clause", 
            "title": "Options"
        }, 
        {
            "location": "/keys/", 
            "text": "mdx_steroids.keys\n\n\n\n\nNote\n\n\nThis is a fork of \npymdownx.keys\n by Isaac Muse. Please check the \ndocumentation\n on the original author\ns site! \n\n\n\n\nKeys.\n\n\npymdownx.keys\n\nMarkdown extension for keystroke (user keyboard input) formatting.\n\n\nIt wraps the syntax \n++key+key+key++\n (for individual keystrokes with modifiers)\n\nor \n++\"string\"++\n (for continuous keyboard input) into HTML \nkbd\n elements.\n\n\nIf a key is found in the extension\ns database, its \nkbd\n element gets a matching class.\n\nCommon synonyms are included, e.g. \n++pg-up++\n will match as \n++page-up++\n.\n\n\nConfig\n\n\nIf \nstrict\n is \nTrue\n, the entire series of keystrokes is wrapped into an outer\nkbd\n element, and then,\n\neach keystroke is wrapped into a separate inner \nkbd\n element, which matches the HTML5 spec.\n\nIf \nstrict\n is \nFalse\n, an outer \nspan\n is used, which matches the practice on Github or StackOverflow.\n\n\nThe resulting \nkbd\n elements are separated by \nseparator\n (\n+\n by default, can be \n''\n or something else).\n\n\nIf \ncamel_case\n is \nTrue\n, \n++PageUp++\n will match the same as \n++page-up++\n.\n\n\nThe database can be extended or modified with the \nkey_map\n dict.\n\n\nExamples\n\n\nInput\n\n\nPress ++Shift+Alt+PgUp++, type in ++\"Hello\"++ and press ++Enter++.\n\n\n\nConfig 1\n\n\n  pymdownx.keys:\n    camel_case: true\n    strict: false\n    separator: '+'\n\n\n\nOutput 1\n\n\np\nPress \nspan class=\"keys\"\nkbd class=\"key-shift\"\nShift\n/kbd\nspan\n+\n/span\nkbd\nclass=\"key-alt\"\nAlt\n/kbd\nspan\n+\n/span\nkbd class=\"key-page-up\"\nPage Up\n/kbd\n/span\n, type in \nspan\nclass=\"keys\"\nkbd\nHello\n/kbd\n/span\n and press \nspan class=\"keys\"\nkbd class=\"key-enter\"\nEnter\n/kbd\n/span\n.\n/p\n\n\n\nConfig 2\n\n\n  pymdownx.keys:\n    camel_case: true\n    strict: true\n    separator: ''\n\n\n\nOutput 2\n\n\np\nPress \nkbd class=\"keys\"\nkbd class=\"key-shift\"\nShift\n/kbd\nkbd class=\"key-alt\"\nAlt\n/kbd\nkbd\nclass=\"key-page-up\"\nPage Up\n/kbd\n/kbd\n, type in \nkbd class=\"keys\"\nkbd\nHello\n/kbd\n/kbd\n and press \nkbd\nclass=\"keys\"\nkbd class=\"key-enter\"\nEnter\n/kbd\n/kbd\n.\n/p\n\n\n\nIdea by Adam Twardoch and coded by Isaac Muse.\n\n\nCopyright \n 2017 Isaac Muse \nisaacmuse@gmail.com\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n\ndocumentation files (the \nSoftware\n), to deal in the Software without restriction, including without limitation\n\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,\n\nand to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions\n\nof the Software.\n\n\nTHE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\nDEALINGS IN THE SOFTWARE.", 
            "title": "keys"
        }, 
        {
            "location": "/keys/#config", 
            "text": "If  strict  is  True , the entire series of keystrokes is wrapped into an outer kbd  element, and then, \neach keystroke is wrapped into a separate inner  kbd  element, which matches the HTML5 spec. \nIf  strict  is  False , an outer  span  is used, which matches the practice on Github or StackOverflow.  The resulting  kbd  elements are separated by  separator  ( +  by default, can be  ''  or something else).  If  camel_case  is  True ,  ++PageUp++  will match the same as  ++page-up++ .  The database can be extended or modified with the  key_map  dict.", 
            "title": "Config"
        }, 
        {
            "location": "/keys/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/keys/#input", 
            "text": "Press ++Shift+Alt+PgUp++, type in ++\"Hello\"++ and press ++Enter++.", 
            "title": "Input"
        }, 
        {
            "location": "/keys/#config-1", 
            "text": "pymdownx.keys:\n    camel_case: true\n    strict: false\n    separator: '+'", 
            "title": "Config 1"
        }, 
        {
            "location": "/keys/#output-1", 
            "text": "p Press  span class=\"keys\" kbd class=\"key-shift\" Shift /kbd span + /span kbd\nclass=\"key-alt\" Alt /kbd span + /span kbd class=\"key-page-up\" Page Up /kbd /span , type in  span\nclass=\"keys\" kbd Hello /kbd /span  and press  span class=\"keys\" kbd class=\"key-enter\" Enter /kbd /span . /p", 
            "title": "Output 1"
        }, 
        {
            "location": "/keys/#config-2", 
            "text": "pymdownx.keys:\n    camel_case: true\n    strict: true\n    separator: ''", 
            "title": "Config 2"
        }, 
        {
            "location": "/keys/#output-2", 
            "text": "p Press  kbd class=\"keys\" kbd class=\"key-shift\" Shift /kbd kbd class=\"key-alt\" Alt /kbd kbd\nclass=\"key-page-up\" Page Up /kbd /kbd , type in  kbd class=\"keys\" kbd Hello /kbd /kbd  and press  kbd\nclass=\"keys\" kbd class=\"key-enter\" Enter /kbd /kbd . /p  Idea by Adam Twardoch and coded by Isaac Muse.  Copyright   2017 Isaac Muse  isaacmuse@gmail.com  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \ndocumentation files (the  Software ), to deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, \nand to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions \nof the Software.  THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \nDEALINGS IN THE SOFTWARE.", 
            "title": "Output 2"
        }, 
        {
            "location": "/kill_tags/", 
            "text": "mdx_steroids.kill_tags\n\n\nThe \nmdx_steroids.kill_tags\n removes requested HTML elements from final HTML output.\n\n\nInstallation\n\n\npip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nDocs\n\n\n\n\ngithub.com/twardoch/markdown-steroids\n\n\n\n\nOptions\n\n\n\n\n\n\nThe \nkill\n option allows to specify a list of CSS selectors or (when using the \n!\n prefix), XPath selectors.\n\nElements matching to these selectors will be completely removed from the final HTML.\n\n\n\n\n\n\nThe \nkill_known\n option allows to remove (if true) or keep (if false) certain hardcoded selectors.\n\n\n\n\n\n\nThe \nkill_empty\n option allows to specify a list of simple element tags which will be removed if they\nre empty.\n\n\n\n\n\n\nThe \nnormalize\n option will pass the final HTML through BeautifulSoup if true.\n\n\n\n\n\n\n  mdx_steroids.kill_tags:\n    normalize: false  # Do not use BeautifulSoup for post-processing\n    kill:             # List of CSS selectors or (with \"!\" prefix) XPath selectors to delete\n      - \"!//pre[@class and contains(concat(' ', normalize-space(@class), ' '), ' highlight ') and code[@class and\n      contains(concat(' ', normalize-space(@class), ' '), ' language-del ')]]\"\n      - del\n    kill_known: false # Do not remove some hardcoded \"known\" selectors\n    kill_empty:       # List of HTML tags (simple) to be removed if they\nre empty\n      - p\n      - div\n\n\n\nExample\n\n\nThis assumes the \npymdownx.tilde\n extension being used, and the above configuration.\n\n\nInput Markdown 1\n\n\nThis is an example where a portion of inline text has been surrounded with \n~~\n on each side, which will be visible in the Github wiki preview~~ but will be deleted from the final HTML~~. And this is another example where a portion of inline text has been surrounded with the HTML tag \ndel\n on each side.\n\n\nThis is an example where a portion of inline text has\nbeen surrounded with `~~` on each side, which will\nbe visible in the Github wiki preview~~ but will\nbe deleted from the final HTML~~. And this is another\nexample where a portion of inline text has been\nsurrounded with the HTML tag `del` on each\nside\ndel\n and it also will be deleted from the\nfinal HTML\n/del\n.\n\n\n\nOutput HTML 1\n\n\nThis is an example where a portion of inline text has been surrounded with \n~~\n on each side,\nwhich will be visible in the Github wiki preview . And this is another example where a portion of inline text has\nbeen surrounded with the HTML tag \ndel\n on each side. \n\n\n\np\nThis is an example where a portion of inline text has been surrounded with \ncode\n~~\n/code\n on each side,\nwhich will be visible in the Github wiki preview . And this is another example where a portion of inline text has\nbeen surrounded with the HTML tag \ncode\ndel\n/code\n on each side. \n/p\n\n\n\nInput Markdown 2\n\n\nThis is a visible paragraph before the special del block.\n\n\n\n\n\n\n\n\nthis is a list item that will be visible\n\n\n\n\n\n\nthis is another list item that will be visible\n\n\n\n\n\n\n    This is a visible paragraph before the special del block.\n\n    ```del\n    ## This heading from details will be deleted\n\n    This can be an arbitrarily long set of paragraphs.\n    This can be an arbitrarily long set of paragraphs.\n\n    * this is a list item that will be deleted\n\n    * this is another list item that will be deleted\n    ```\n\n    * this is a list item that will be visible\n\n    * this is another list item that will be visible\n\n\n\nOutput HTML 2\n\n\nThis is a visible paragraph before the special del block. \n\n\n\n\n\n\n\nthis is a list item that will be visible\n\n\n\n\n\n\nthis is another list item that will be visible\n\n\n\n\n\n\n\np\nThis is a visible paragraph before the special del block. \n/p\n\n\nul\n\n\nli\n\n\np\nthis is a list item that will be visible\n/p\n\n\n/li\n\n\nli\n\n\np\nthis is another list item that will be visible\n/p\n\n\n/li\n\n\n/ul\n\n\n\nCopyright \n 2017 Adam Twardoch \nadam+github@twardoch.com\n\nLicense: \nBSD 3-clause", 
            "title": "kill_tags"
        }, 
        {
            "location": "/kill_tags/#installation", 
            "text": "pip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/kill_tags/#docs", 
            "text": "github.com/twardoch/markdown-steroids", 
            "title": "Docs"
        }, 
        {
            "location": "/kill_tags/#options", 
            "text": "The  kill  option allows to specify a list of CSS selectors or (when using the  !  prefix), XPath selectors. \nElements matching to these selectors will be completely removed from the final HTML.    The  kill_known  option allows to remove (if true) or keep (if false) certain hardcoded selectors.    The  kill_empty  option allows to specify a list of simple element tags which will be removed if they re empty.    The  normalize  option will pass the final HTML through BeautifulSoup if true.      mdx_steroids.kill_tags:\n    normalize: false  # Do not use BeautifulSoup for post-processing\n    kill:             # List of CSS selectors or (with \"!\" prefix) XPath selectors to delete\n      - \"!//pre[@class and contains(concat(' ', normalize-space(@class), ' '), ' highlight ') and code[@class and\n      contains(concat(' ', normalize-space(@class), ' '), ' language-del ')]]\"\n      - del\n    kill_known: false # Do not remove some hardcoded \"known\" selectors\n    kill_empty:       # List of HTML tags (simple) to be removed if they re empty\n      - p\n      - div", 
            "title": "Options"
        }, 
        {
            "location": "/kill_tags/#example", 
            "text": "This assumes the  pymdownx.tilde  extension being used, and the above configuration.", 
            "title": "Example"
        }, 
        {
            "location": "/kill_tags/#input-markdown-1", 
            "text": "This is an example where a portion of inline text has been surrounded with  ~~  on each side, which will be visible in the Github wiki preview~~ but will be deleted from the final HTML~~. And this is another example where a portion of inline text has been surrounded with the HTML tag  del  on each side.  This is an example where a portion of inline text has\nbeen surrounded with `~~` on each side, which will\nbe visible in the Github wiki preview~~ but will\nbe deleted from the final HTML~~. And this is another\nexample where a portion of inline text has been\nsurrounded with the HTML tag `del` on each\nside del  and it also will be deleted from the\nfinal HTML /del .", 
            "title": "Input Markdown 1"
        }, 
        {
            "location": "/kill_tags/#output-html-1", 
            "text": "This is an example where a portion of inline text has been surrounded with  ~~  on each side,\nwhich will be visible in the Github wiki preview . And this is another example where a portion of inline text has\nbeen surrounded with the HTML tag  del  on each side.   p This is an example where a portion of inline text has been surrounded with  code ~~ /code  on each side,\nwhich will be visible in the Github wiki preview . And this is another example where a portion of inline text has\nbeen surrounded with the HTML tag  code del /code  on each side.  /p", 
            "title": "Output HTML 1"
        }, 
        {
            "location": "/kill_tags/#input-markdown-2", 
            "text": "This is a visible paragraph before the special del block.    this is a list item that will be visible    this is another list item that will be visible        This is a visible paragraph before the special del block.\n\n    ```del\n    ## This heading from details will be deleted\n\n    This can be an arbitrarily long set of paragraphs.\n    This can be an arbitrarily long set of paragraphs.\n\n    * this is a list item that will be deleted\n\n    * this is another list item that will be deleted\n    ```\n\n    * this is a list item that will be visible\n\n    * this is another list item that will be visible", 
            "title": "Input Markdown 2"
        }, 
        {
            "location": "/kill_tags/#output-html-2", 
            "text": "This is a visible paragraph before the special del block.     this is a list item that will be visible    this is another list item that will be visible    p This is a visible paragraph before the special del block.  /p  ul  li  p this is a list item that will be visible /p  /li  li  p this is another list item that will be visible /p  /li  /ul  Copyright   2017 Adam Twardoch  adam+github@twardoch.com \nLicense:  BSD 3-clause", 
            "title": "Output HTML 2"
        }, 
        {
            "location": "/md_mako/", 
            "text": "mdx_steroids.md_mako\n\n\nThe \nmdx_steroids.md_mako\n feeds Markdown through the Mako templating system.\n\n\nInstallation\n\n\npip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nDocs\n\n\n\n\ngithub.com/twardoch/markdown-steroids\n\n\n\n\nOptions\n\n\n  mdx_steroids.md_mako:\n    include_base    : '.'        # Default location from which to evaluate relative paths for the `\n%include file=\"...\"/\n` statement.\n    include_encoding: 'utf-8'    # Encoding of the files used by the `\n%include file=\"...\"/\n` statement.\n    include_auto    : 'head.md'  # Path to Mako file to be automatically included at the beginning.\n    python_block    : 'head.py'  # Path to Python file to be automatically included at the beginning as a module block. Useful for global imports and functions.\n    meta:                        # Dict of args passed to `mako.Template().render()`. Can be overriden through Markdown YAML metadata.\n      author        : 'John Doe' # Can be referred inside the Markdown via `${author}`\n      status        : 'devel'    # Can be referred inside the Markdown via `${status}`\n\n\n\nExample\n\n\nThis assumes that the \nmeta\n or \nmdx_steroids.meta_yaml\n extension is enabled,\n\nso parsing metadata at the beginning of the file works.\n\n\nInput Markdown\n\n\n---\nauthor: John Doe\n---\n\n%!\nimport datetime\ndef today():\n    now = datetime.datetime.now()\n    return now.strftime('%Y-%m-%d')\n%\n\n\n${author} has last edited this on ${today()}.\n\n% for number in ['one', 'two', 'three']:\n* ${number}\n% endfor\n\n\n\nOutput HTML\n\n\nJohn Doe has last edited this on 2017-08-17.\n\n\n\n\n\none\n\n\ntwo\n\n\nthree\n\n\n\n\n\np\nJohn Doe has last edited this on 2017-08-17.\n/p\n\n\nul\n\n\nli\none\n/li\n\n\nli\ntwo\n/li\n\n\nli\nthree\n/li\n\n\n/ul\n\n\n\nCopyright \n 2017 Adam Twardoch \nadam+github@twardoch.com\n\nLicense: \nBSD 3-clause", 
            "title": "md_mako"
        }, 
        {
            "location": "/md_mako/#installation", 
            "text": "pip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/md_mako/#docs", 
            "text": "github.com/twardoch/markdown-steroids", 
            "title": "Docs"
        }, 
        {
            "location": "/md_mako/#options", 
            "text": "mdx_steroids.md_mako:\n    include_base    : '.'        # Default location from which to evaluate relative paths for the ` %include file=\"...\"/ ` statement.\n    include_encoding: 'utf-8'    # Encoding of the files used by the ` %include file=\"...\"/ ` statement.\n    include_auto    : 'head.md'  # Path to Mako file to be automatically included at the beginning.\n    python_block    : 'head.py'  # Path to Python file to be automatically included at the beginning as a module block. Useful for global imports and functions.\n    meta:                        # Dict of args passed to `mako.Template().render()`. Can be overriden through Markdown YAML metadata.\n      author        : 'John Doe' # Can be referred inside the Markdown via `${author}`\n      status        : 'devel'    # Can be referred inside the Markdown via `${status}`", 
            "title": "Options"
        }, 
        {
            "location": "/md_mako/#example", 
            "text": "This assumes that the  meta  or  mdx_steroids.meta_yaml  extension is enabled, \nso parsing metadata at the beginning of the file works.", 
            "title": "Example"
        }, 
        {
            "location": "/md_mako/#input-markdown", 
            "text": "---\nauthor: John Doe\n--- %!\nimport datetime\ndef today():\n    now = datetime.datetime.now()\n    return now.strftime('%Y-%m-%d')\n% \n\n${author} has last edited this on ${today()}.\n\n% for number in ['one', 'two', 'three']:\n* ${number}\n% endfor", 
            "title": "Input Markdown"
        }, 
        {
            "location": "/md_mako/#output-html", 
            "text": "John Doe has last edited this on 2017-08-17.   one  two  three   p John Doe has last edited this on 2017-08-17. /p  ul  li one /li  li two /li  li three /li  /ul  Copyright   2017 Adam Twardoch  adam+github@twardoch.com \nLicense:  BSD 3-clause", 
            "title": "Output HTML"
        }, 
        {
            "location": "/meta_yaml/", 
            "text": "YAML Meta Data Extension for \nPython-Markdown\n\n\nThis extension adds YAML meta data handling to markdown.\n\n\nAs in the original, meta data is parsed but not used in processing.\n\n\n(YAML meta data is used e.g. by \npandoc\n)\n\n\nDependencies: \nPyYAML\n\n\nBasic Usage:\n\n\n import markdown\n\n text = '''---\n... Title: Test Doc.\n... Author: Waylan Limberg\n... Blank_Data:\n... ...\n...\n... The body. This is paragraph one.\n... '''\n\n md = markdown.Markdown(['meta_yaml'])\n\n print(md.convert(text))\n\np\nThe body. This is paragraph one.\n/p\n\n\n print(md.Meta) # doctest: +SKIP\n{'blank_data': [''], 'author': ['Waylan Limberg'], 'title': ['Test Doc.']}\n\n\n\n\nMake sure text without Meta Data still works (markdown \n 1.6b returns a \n).\n\n\n text = '    Some Code - not extra lines of meta data.'\n\n md = markdown.Markdown(['meta_yaml'])\n\n print(md.convert(text))\n\npre\ncode\nSome Code - not extra lines of meta data.\n\n/code\n/pre\n\n\n md.Meta\n{}\n\n\n\n\n\nCopyright 2014 Bernhard Fisseni\n\n\nBased on the meta data extension included with Python-Markdown,\n\nCopyright 2007-2008 \nWaylan Limberg\n.\n\n\nLicense: BSD (see LICENSE.md for details)", 
            "title": "meta_yaml"
        }, 
        {
            "location": "/replimgsrc/", 
            "text": "mdx_steroids.replimgsrc\n\n\nThe \nmdx_steroids.replimgsrc\n extension finds and replaces portions of an image URL. \n\n\nInstallation\n\n\npip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nDocs\n\n\n\n\ngithub.com/twardoch/markdown-steroids/\n\n\n\n\nOptions\n\n\n  steroids.replimgsrc: \n    find           : 'https://github.com/repo/blob/master/images/'\n    replace        : '../img/'\n\n\n\nCopyright \n 2016 Adam Twardoch \nadam+github@twardoch.com\n\nLicense: \nBSD 3-clause", 
            "title": "replimgsrc"
        }, 
        {
            "location": "/replimgsrc/#installation", 
            "text": "pip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/replimgsrc/#docs", 
            "text": "github.com/twardoch/markdown-steroids/", 
            "title": "Docs"
        }, 
        {
            "location": "/replimgsrc/#options", 
            "text": "steroids.replimgsrc: \n    find           : 'https://github.com/repo/blob/master/images/'\n    replace        : '../img/'  Copyright   2016 Adam Twardoch  adam+github@twardoch.com \nLicense:  BSD 3-clause", 
            "title": "Options"
        }, 
        {
            "location": "/wikilink/", 
            "text": "mdx_steroids.wikilink\n\n\nThe \nmdx_steroids.wikilink\n extension parses wikilinks in the style of the  \nGollum\n wiki and the \nGithub Wiki system\n. It will convert links such as \n[[Page name]]\n to \n[Page name](/Page-name/)\n. You can specify the start, end and separator strings.\n\n\nInstallation\n\n\npip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git\n\n\n\nDocs\n\n\n\n\ngithub.com/twardoch/markdown-steroids\n\n\n\n\nOptions\n\n\n  steroids.wikilink:\n    base_url       : '/'                  # String to append to beginning or URL.\n    end_url        : '/'                  # String to append to end of URL.\n    html_class     : 'wikilink'           # CSS hook. Leave blank for none.\n    space_sep      : '-'                  # String that replaces the space, \"-\" by default.\n    build_url      : build_url            # Alternative callable formats URL from label.\n\n\n\nExample\n\n\nInput Markdown\n\n\nThis is a \nWiki Link\n of some sorts.\n\n\nThis is a [[Wiki Link]] of some sorts. \n\n\n\nOutput HTML\n\n\nThis is a \nWiki Link\n of some sorts.\n\n\n\np\nThis is a \na class=\"wikilink\" href=\"/Wiki-Link/\"\nWiki Link\n/a\n of some sorts.\n/p\n\n\n\nCopyright \n 2016 Adam Twardoch \nadam+github@twardoch.com\n\nBased on original code\n\nCopyright \n 2008 \nWaylan Limberg\n\nCopyright \n 2008-2014 The Python Markdown Project\n\nLicense: \nBSD 3-clause", 
            "title": "wikilink"
        }, 
        {
            "location": "/wikilink/#installation", 
            "text": "pip install --user --upgrade git+https://github.com/twardoch/markdown-steroids.git", 
            "title": "Installation"
        }, 
        {
            "location": "/wikilink/#docs", 
            "text": "github.com/twardoch/markdown-steroids", 
            "title": "Docs"
        }, 
        {
            "location": "/wikilink/#options", 
            "text": "steroids.wikilink:\n    base_url       : '/'                  # String to append to beginning or URL.\n    end_url        : '/'                  # String to append to end of URL.\n    html_class     : 'wikilink'           # CSS hook. Leave blank for none.\n    space_sep      : '-'                  # String that replaces the space, \"-\" by default.\n    build_url      : build_url            # Alternative callable formats URL from label.", 
            "title": "Options"
        }, 
        {
            "location": "/wikilink/#example", 
            "text": "", 
            "title": "Example"
        }, 
        {
            "location": "/wikilink/#input-markdown", 
            "text": "This is a  Wiki Link  of some sorts.  This is a [[Wiki Link]] of some sorts.", 
            "title": "Input Markdown"
        }, 
        {
            "location": "/wikilink/#output-html", 
            "text": "This is a  Wiki Link  of some sorts.  p This is a  a class=\"wikilink\" href=\"/Wiki-Link/\" Wiki Link /a  of some sorts. /p  Copyright   2016 Adam Twardoch  adam+github@twardoch.com \nBased on original code \nCopyright   2008  Waylan Limberg \nCopyright   2008-2014 The Python Markdown Project \nLicense:  BSD 3-clause", 
            "title": "Output HTML"
        }, 
        {
            "location": "/credits/", 
            "text": "Credits\n\n\nCopyright and License\n\n\n\n\nCopyright \n 2016-2017 \nAdam Twardoch\n\n\nCopyright \n 2008 \nWaylan Limberg\n \n\n\nCopyright \n 2008-2014 The Python Markdown Project\n\n\nCopyright \n 2014-2015 \nIsaac Muse\n \n\n\nLicense: \nBSD 3-Clause License\n\n\n\n\nProjects related to Markdown and MkDocs by Adam Twardoch:\n\n\n\n\ntwardoch.github.io/markdown-rundown/\n \n summary of Markdown formatting styles \ngit\n\n\ntwardoch.github.io/markdown-steroids/\n \n Some extensions for Python Markdown \ngit\n\n\ntwardoch.github.io/markdown-utils/\n \n various utilities for working with Markdown-based documents \ngit\n\n\ntwardoch.github.io/mkdocs-combine/\n \n convert an MkDocs Markdown source site to a single Markdown document \ngit\n\n\ngithub.com/twardoch/noto-mkdocs-theme/tree/rework\n \n great Material Design-inspired theme for MkDocs \ngit\n\n\ntwardoch.github.io/clinker-mktheme/\n \n great theme for MkDocs \ngit", 
            "title": "Credits"
        }, 
        {
            "location": "/credits/#copyright-and-license", 
            "text": "Copyright   2016-2017  Adam Twardoch  Copyright   2008  Waylan Limberg    Copyright   2008-2014 The Python Markdown Project  Copyright   2014-2015  Isaac Muse    License:  BSD 3-Clause License", 
            "title": "Copyright and License"
        }, 
        {
            "location": "/credits/#projects-related-to-markdown-and-mkdocs-by-adam-twardoch", 
            "text": "twardoch.github.io/markdown-rundown/    summary of Markdown formatting styles  git  twardoch.github.io/markdown-steroids/    Some extensions for Python Markdown  git  twardoch.github.io/markdown-utils/    various utilities for working with Markdown-based documents  git  twardoch.github.io/mkdocs-combine/    convert an MkDocs Markdown source site to a single Markdown document  git  github.com/twardoch/noto-mkdocs-theme/tree/rework    great Material Design-inspired theme for MkDocs  git  twardoch.github.io/clinker-mktheme/    great theme for MkDocs  git", 
            "title": "Projects related to Markdown and MkDocs by Adam Twardoch:"
        }, 
        {
            "location": "/license/", 
            "text": "BSD 3-Clause License\n\n\nCopyright \n 2016-2017 Adam Twardoch \nadam+github@twardoch.com\n\nCopyright \n 2014-2017 Isaac Muse \nisaacmuse@gmail.com\n\nCopyright \n 2007-2014 The Python Markdown Project\n\nCopyright \n 2008 Waylan Limberg\n\nCopyright \n 2004-2006 Yuri Takhteyev\n\nCopyright \n 2004 Manfred Stienstra\n\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without modification,\n\nare permitted provided that the following conditions are met:\n\n\n\n\n\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n\n\n\n\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and or other materials provided with the distribution.\n\n\n\n\n\n\nNeither the name of the original author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\n\n\n\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \nAS IS\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "License"
        }
    ]
}